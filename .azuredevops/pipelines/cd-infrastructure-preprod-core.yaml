---

name: $(Build.SourceBranchName)-$(Date:yyyyMMdd)_$(Rev:r)
trigger: none
pr: none

resources:
  repositories:
    - repository: dtos-devops-templates
      type: github
      name: NHSDigital/dtos-devops-templates
      ref: 3d5c1af7727fd9a7a758bcf99c894b83eb236c3c
      endpoint: NHSDigital

parameters:
  - name: dockerImageTag
    # Used to set the Docker image tag via Terraform in the Continuous Deployment settings of function and container apps
    displayName: 'Docker Image Tag'
    type: string
    default: preprod

  - name: retagImages
    # Only required until commit hashes are passed in by calling pipeline, except for the
    # PreProd pipeline which needs to retag images to move them from the Dev ACR to the Prod ACR
    displayName: 'Re-tag Images'
    type: boolean
    default: true

  - name: dockerImageReTagFrom
    # Only required until commit hashes are passed in by calling pipeline
    displayName: 'Docker Image Retag from value'
    type: string
    default: integration

  - name: dockerImageReTagTo
    # Only required until commit hashes are passed in by calling pipeline
    displayName: 'Docker Image Retag to value'
    type: string
    default: preprod

  - name: terraformActions
    # This parameter allows the user to run only the plan for testing purposes
    displayName: 'Apply Terraform Plan'
    type: string
    values:
      - 'PlanOnly'
      - 'Apply'
    default: 'Apply'

variables:
  - name: hostPoolName
    value: private-pool-prod-uks
  - group: PRE_core_backend
  - group: PRE_audit_backend_remote_state
  - group: PRE_image_pipelines
  # - group: PRE_automation_testing_pipeline
  - group: PRD_hub_backend_remote_state
  - name: TF_VERSION
    value: 1.11.4
  - name: TF_PLAN_ARTIFACT
    value: tf_plan_core_PRE
  - name: TF_DIRECTORY
    value: $(System.DefaultWorkingDirectory)/$(System.TeamProject)/infrastructure/tf-core
  - name: ENVIRONMENT
    value: preprod

stages:
- template: ../templates/cd-infrastructure-core-common.yaml
  parameters:
    hostPoolName: $(hostPoolName)
    serviceConnection: $(SERVICE_CONNECTION)
    targetSubscriptionId: $(TF_VAR_TARGET_SUBSCRIPTION_ID)
    terraformActions: ${{ parameters.terraformActions }}
    tfVarsFile: environments/$(ENVIRONMENT).tfvars
    environment: $(ENVIRONMENT)
    resourceGroupNameSql: $(RESOURCE_GROUP_NAME_SQL)
    databaseManagementJobName: $(DATABASE_MANAGEMENT_JOB_NAME)
    dockerImageTag: ${{ parameters.dockerImageTag }}
    retagImages: ${{ parameters.retagImages }}
    retagImagesFrom: ${{ parameters.dockerImageReTagFrom }}
    retagImagesTo: ${{ parameters.dockerImageReTagTo }}
    slackWebHook: $(SLACK_WEBHOOK_URL_WORKFLOWS)
