---

name: $(Build.SourceBranchName)-$(Date:yyyyMMdd)_$(Rev:r)
trigger: none
pr: none

resources:
  repositories:
    - repository: dtos-devops-templates
      type: github
      name: NHSDigital/dtos-devops-templates
      ref: 6ef691d0ed3ff16b12a06692c258f6c950be6507
      endpoint: NHSDigital

parameters:
  - name: dockerImageTag
    # Used to set the Docker image tag via Terraform in the Continuous Deployment settings of function and container apps
    displayName: 'Docker Image Tag'
    type: string
    default: integration

  - name: retagImages
    # Only required until commit hashes are passed in by calling pipeline, except for the
    # PreProd pipeline which needs to retag images to move them from the Dev ACR to the Prod ACR
    displayName: 'Re-tag Images'
    type: boolean
    default: true

  - name: dockerImageReTagFrom
    # Only required until commit hashes are passed in by calling pipeline
    displayName: 'Docker Image Retag from value'
    type: string
    default: nft

  - name: dockerImageReTagTo
    # Only required until commit hashes are passed in by calling pipeline
    displayName: 'Docker Image Retag to value'
    type: string
    default: integration

  - name: terraformActions
    # This parameter allows the user to run only the plan for testing purposes
    displayName: 'Apply Terraform Plan'
    type: string
    values:
      - 'PlanOnly'
      - 'Apply'
    default: 'Apply'

  # - name: testTypes
  #   displayName: 'End-2-End Tests to run (enter [] to skip)'
  #   type: object
  #   default:
  #     - smoke_e2e
  #     - regression_api
  #     - regression_e2e_epic1
  #     - regression_e2e_epic2
  #     - regression_e2e_epic3

variables:
  - name: hostPoolName
    value: private-pool-dev-uks
  - group: INT_core_backend
  - group: INT_audit_backend_remote_state
  - group: INT_image_pipelines
  - group: INT_automation_testing_pipeline
  - group: DEV_hub_backend_remote_state
  - name: TF_VERSION
    value: 1.11.4
  - name: TF_PLAN_ARTIFACT
    value: tf_plan_core_INT
  - name: TF_DIRECTORY
    value: $(System.DefaultWorkingDirectory)/$(System.TeamProject)/infrastructure/tf-core
  - name: ENVIRONMENT
    value: integration

stages:
- template: ../templates/cd-infrastructure-core-common.yaml
  parameters:
    hostPoolName: $(hostPoolName)
    serviceConnection: $(SERVICE_CONNECTION)
    targetSubscriptionId: $(TF_VAR_TARGET_SUBSCRIPTION_ID)
    terraformActions: ${{ parameters.terraformActions }}
    tfVarsFile: environments/$(ENVIRONMENT).tfvars
    environment: $(ENVIRONMENT)
    resourceGroupNameSql: $(RESOURCE_GROUP_NAME_SQL)
    databaseManagementJobName: $(DATABASE_MANAGEMENT_JOB_NAME)
    dockerImageTag: ${{ parameters.dockerImageTag }}
    retagImages: ${{ parameters.retagImages }}
    retagImagesFrom: ${{ parameters.dockerImageReTagFrom }}
    retagImagesTo: ${{ parameters.dockerImageReTagTo }}
    slackWebHook: $(SLACK_WEBHOOK_URL_WORKFLOWS)

# Loop to create test stages dynamically based on the testTypes parameter
# - ${{ each testType in parameters.testTypes }}:
#     - stage: ${{ testType }}_stage
#       displayName: Run ${{ testType }} Tests
#       ${{ if eq(testType, 'regression_api') }}:
#         dependsOn: smoke_e2e_stage
#       ${{ if eq(testType, 'regression_e2e_epic1') }}:
#         dependsOn: regression_api_stage
#       ${{ if eq(testType, 'regression_e2e_epic2') }}:
#         dependsOn: regression_e2e_epic1_stage
#       ${{ if eq(testType, 'regression_e2e_epic3') }}:
#         dependsOn: regression_e2e_epic2_stage
#       condition: succeededOrFailed()
#       jobs:
#         - job: ${{ testType }}_job
#           pool:
#             name: $(hostPoolName)
#           steps:
#             - template: .azuredevops/templates/steps/run-post-deployment-pw-tests.yaml@dtos-devops-templates
#               parameters:
#                 serviceConnection: $(SERVICE_CONNECTION)
#                 testProjectDirectory: "tests/playwright-tests"
#                 testfileDirectory: "src/tests/e2e/testFiles"
#                 testProjectName: "tests"
#                 testType: ${{ testType }}
