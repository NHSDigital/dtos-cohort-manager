---

name: $(Build.SourceBranchName)-$(Date:yyyyMMdd)_$(Rev:r)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infrastructure/*

pool:
  #vmImage: ubuntu-latest
  name: private-pool-dev-uks

resources:
  repositories:
    - repository: dtos-devops-templates
      type: github
      name: NHSDigital/dtos-devops-templates
      ref: 3e04c8417104d551ee7abaea578fb98d915fab23
      endpoint: NHSDigital

variables:
  - group: INT_core_backend
  - group: INT_audit_backend_remote_state
  - group: DEV_hub_backend_remote_state
  - name: TF_VERSION
    value: 1.9.2
  - name: TF_PLAN_ARTIFACT
    value: tf_plan_core_INT
  - name: TF_DIRECTORY
    value: $(System.DefaultWorkingDirectory)/$(System.TeamProject)/infrastructure/tf-core
  - name: ENVIRONMENT
    value: integration

stages:
  - stage: terraform_plan
    displayName: Terraform Plan
    condition: eq(variables['Build.Reason'], 'Manual')
    variables:
      tfVarsFile: environments/$(ENVIRONMENT).tfvars
    jobs:
      - job: init_and_plan
        displayName: Init, plan, store artifact
        steps:
          - checkout: self
          - checkout: dtos-devops-templates
          - template: .azuredevops/templates/steps/tf_plan.yaml@dtos-devops-templates

  - stage: terraform_apply
    displayName: Terraform Apply
    dependsOn: [terraform_plan]
    condition: and(eq(dependencies.terraform_plan.outputs['init_and_plan.TerraformPlan.changesPresent'], 'true'), eq(variables['Build.Reason'], 'Manual'))
    jobs:
      - deployment: terraform_apply
        displayName: Init, get plan artifact, apply
        environment: $(ENVIRONMENT)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - checkout: dtos-devops-templates
                - template: .azuredevops/templates/steps/tf_apply.yaml@dtos-devops-templates
