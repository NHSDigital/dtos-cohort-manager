---

parameters:
  - name: serviceConnection
    type: string
  - name: resourceGroupSQL
    type: string
  - name: miNameACR
    type: string
  - name: miNameSQL
    type: string
  - name: acrServerName
    type: string
  - name: containerImageName
    type: string
  - name: sqlConnectionString
    type: string

steps:
  - task: AzureCLI@2
    name: apply_database_changes
    displayName: Apply database changes
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      addSpnToEnvironment: true
      failOnStandardError: false
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |

        subscriptionId=$(TF_VAR_TARGET_SUBSCRIPTION_ID)
        az account set -s $subscriptionId

        managedIdentitySQL=$(az identity show --name ${{ parameters.miNameSQL }} --resource-group ${{ parameters.resourceGroupSQL }} --subscription $subscriptionId) # allows script to be re-run
        managedIdentityIdSQL=$(echo $managedIdentitySQL | jq -r '.clientId')

        # Export the variables for use in the container instance creation:
        export CONTAINER_GROUP_NAME='acigrp-cohort-manager-db-migration'
        export CONTAINER_NAME='cohort-manager-db-migration'
        export CONTAINER_IMAGE='${{ parameters.acrServerName }}/${{ parameters.containerImageName }}'
        export ACR_SERVER='${{ parameters.acrServerName }}'
        export MI_ID_ACR="/subscriptions/$subscriptionId/resourcegroups/${{ parameters.resourceGroupSQL }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{ parameters.miNameACR }}"
        export MI_ID_SQL="/subscriptions/$subscriptionId/resourceGroups/${{ parameters.resourceGroupSQL }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{ parameters.miNameSQL }}"
        export SQL_CONNECTION_STRING='${{ parameters.sqlConnectionString }}'
        export SQL_IDENTITY_CLIENT_ID="$managedIdentityIdSQL"

        # Create a temporary file to store the substituted YAML
        temp_yaml=$(mktemp)

        # Substitute environment variables and write to the temporary file
        envsubst < '.azuredevops/templates/resources/deploy-container-instance-sql-db-migration.yaml' > "$temp_yaml"

        az container create \
            --name $CONTAINER_GROUP_NAME \
            --resource-group ${{ parameters.resourceGroupSQL }} \
            --subscription $subscriptionId \
            --file "${temp_yaml}" \
            --verbose

