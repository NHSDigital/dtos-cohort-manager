[
  {
    "WorkflowName": "Routine",
    "Rules": [
      {
        "RuleName": "8.Transform.UpdatedRecordExcludedAndDMS",
        "LocalParams": [
          {
            "Name": "DMSInSMU",
            "Expression": "participant.CurrentPosting == \"DMS\" && dbLookup.CheckIfPrimaryCareProviderInExcludedSmuList(participant.PrimaryCareProvider)"
          },
          {
            "Name": "WelshCurrentPosting",
            "Expression": "dbLookup.RetrievePostingCategory(participant.CurrentPosting) == \"WALES\" || participant.CurrentPosting == \"CYM\""
          }
        ],
        "Expression": "(participant.RecordType == Actions.Amended) && (DMSInSMU || WelshCurrentPosting)",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "PrimaryCareProvider",
                  "value": null
                },
                {
                  "field": "ReasonForRemoval",
                  "value": "ORR",
                  "isExpression": true
                },
                {
                  "field": "ReasonForRemovalEffectiveFromDate",
                  "value": "DateTime.Today.ToString(\"yyyyMMdd\")",
                  "isExpression": true
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "00.Other.InvalidFlag.TrueAndNoPrimaryCareProvider",
        "Expression": "(!string.IsNullOrEmpty(participant.PrimaryCareProvider) && participant.InvalidFlag  == \"1\") OR participant.RecordType == Actions.Removed",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "field": "PrimaryCareProvider",
                  "value": "",
                  "isExpression": false
                },
                {
                  "field": "ReasonForRemoval",
                  "value": "ORR",
                  "isExpression": false
                },
                {
                  "field": "ReasonForRemovalEffectiveFromDate",
                  "value": "DateTime.UtcNow.Date.ToString(\"yyyyMMdd\")",
                  "isExpression": true
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "60.Other.SupersededNhsNumber",
        "Expression": "participant.RecordType == Actions.Amended && !string.IsNullOrEmpty(participant.SupersededByNhsNumber)",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "field": "PrimaryCareProvider",
                  "value": "",
                  "isExpression": false
                },
                {
                  "field": "ReasonForRemoval",
                  "value": "ORR",
                  "isExpression": false
                },
                {
                  "field": "ReasonForRemovalEffectiveFromDate",
                  "value": "DateTime.UtcNow.Date.ToString(\"yyyyMMdd\")",
                  "isExpression": true
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "00.RecordDeleted",
        "Expression": "participant.RecordType == Actions.Removed",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": false,
                  "field": "ReasonForRemoval",
                  "value": "ORR"
                }
              ]
            }
          }
        }
      }
    ]
  },
  {
    "WorkflowName": "Common",
    "Rules": [
      {
        "RuleName": "1.Truncate.NamePrefix.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.NamePrefix) && participant.NamePrefix.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "NamePrefix",
                  "value": "participant.NamePrefix.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "2.Truncate.FirstName.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.FirstName) && participant.FirstName.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "FirstName",
                  "value": "participant.FirstName.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "3.Truncate.OtherGivenNames.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.OtherGivenNames) && participant.OtherGivenNames.Length > 100",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "OtherGivenNames",
                  "value": "participant.OtherGivenNames.Substring(0, 100)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "4.Truncate.FamilyName.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.FamilyName) && participant.FamilyName.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "FamilyName",
                  "value": "participant.FamilyName.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "5.Truncate.PreviousFamilyName.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.PreviousFamilyName) && participant.PreviousFamilyName.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "PreviousFamilyName",
                  "value": "participant.PreviousFamilyName.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "6.Truncate.AddressLine1.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.AddressLine1) && participant.AddressLine1.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "AddressLine1",
                  "value": "participant.AddressLine1.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "7.Truncate.AddressLine2.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.AddressLine2) && participant.AddressLine2.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "AddressLine2",
                  "value": "participant.AddressLine2.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "8.Truncate.AddressLine3.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.AddressLine3) && participant.AddressLine3.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "AddressLine3",
                  "value": "participant.AddressLine3.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "9.Truncate.AddressLine4.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.AddressLine4) && participant.AddressLine4.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "AddressLine4",
                  "value": "participant.AddressLine4.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "10.Truncate.AddressLine5.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.AddressLine5) && participant.AddressLine5.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "AddressLine5",
                  "value": "participant.AddressLine5.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "13.Truncate.Postcode.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.Postcode) && participant.Postcode.Length > 35",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "Postcode",
                  "value": "participant.Postcode.Substring(0, 35)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "14.Truncate.TelephoneNumber.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.TelephoneNumber) && participant.TelephoneNumber.Length > 32",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "TelephoneNumber",
                  "value": "participant.TelephoneNumber.Substring(0, 32)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "15.Truncate.MobileNumber.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.MobileNumber) && participant.MobileNumber.Length > 32",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "MobileNumber",
                  "value": "participant.MobileNumber.Substring(0, 32)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "16.Truncate.EmailAddress.ExceedsMaximumLength",
        "Expression": "!string.IsNullOrEmpty(participant.EmailAddress) && participant.EmailAddress.Length > 90",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "EmailAddress",
                  "value": "participant.EmailAddress.Substring(0, 90)"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.DateOfBirth",
        "Expression": "participant.DateOfBirth == null ? false : (participant.DateOfBirth.Length != 8 && (participant.DateOfBirth.Length == 4 || participant.DateOfBirth.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "DateOfBirth",
                  "value": "(participant.DateOfBirth.Length == 4 ? participant.DateOfBirth + \"01\" + \"01\" : participant.DateOfBirth + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.DateOfDeath",
        "Expression": "participant.DateOfDeath == null ? false : (participant.DateOfDeath.Length != 8 && (participant.DateOfDeath.Length == 4 || participant.DateOfDeath.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "DateOfDeath",
                  "value": "(participant.DateOfDeath.Length == 4 ? participant.DateOfDeath + \"01\" + \"01\" : participant.DateOfDeath + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.CurrentPostingEffectiveFromDate",
        "Expression": "participant.CurrentPostingEffectiveFromDate == null ? false : (participant.CurrentPostingEffectiveFromDate.Length != 8 && (participant.CurrentPostingEffectiveFromDate.Length == 4 || participant.CurrentPostingEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "CurrentPostingEffectiveFromDate",
                  "value": "(participant.CurrentPostingEffectiveFromDate.Length == 4 ? participant.CurrentPostingEffectiveFromDate + \"01\" + \"01\" : participant.CurrentPostingEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.UsualAddressEffectiveFromDate",
        "Expression": "participant.UsualAddressEffectiveFromDate == null ? false : (participant.UsualAddressEffectiveFromDate.Length != 8 && (participant.UsualAddressEffectiveFromDate.Length == 4 || participant.UsualAddressEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "UsualAddressEffectiveFromDate",
                  "value": "(participant.UsualAddressEffectiveFromDate.Length == 4 ? participant.UsualAddressEffectiveFromDate + \"01\" + \"01\" : participant.UsualAddressEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.ReasonForRemovalEffectiveFromDate",
        "Expression": "participant.ReasonForRemovalEffectiveFromDate == null ? false : (participant.ReasonForRemovalEffectiveFromDate.Length != 8 && (participant.ReasonForRemovalEffectiveFromDate.Length == 4 || participant.ReasonForRemovalEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "ReasonForRemovalEffectiveFromDate",
                  "value": "(participant.ReasonForRemovalEffectiveFromDate.Length == 4 ? participant.ReasonForRemovalEffectiveFromDate + \"01\" + \"01\" : participant.ReasonForRemovalEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.TelephoneNumberEffectiveFromDate",
        "Expression": "participant.TelephoneNumberEffectiveFromDate == null ? false : (participant.TelephoneNumberEffectiveFromDate.Length != 8 && (participant.TelephoneNumberEffectiveFromDate.Length == 4 || participant.TelephoneNumberEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "TelephoneNumberEffectiveFromDate",
                  "value": "(participant.TelephoneNumberEffectiveFromDate.Length == 4 ? participant.TelephoneNumberEffectiveFromDate + \"01\" + \"01\" : participant.TelephoneNumberEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.MobileNumberEffectiveFromDate",
        "Expression": "participant.MobileNumberEffectiveFromDate == null ? false : (participant.MobileNumberEffectiveFromDate.Length != 8 && (participant.MobileNumberEffectiveFromDate.Length == 4 || participant.MobileNumberEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "MobileNumberEffectiveFromDate",
                  "value": "(participant.MobileNumberEffectiveFromDate.Length == 4 ? participant.MobileNumberEffectiveFromDate + \"01\" + \"01\" : participant.MobileNumberEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.EmailAddressEffectiveFromDate",
        "Expression": "participant.EmailAddressEffectiveFromDate == null ? false : (participant.EmailAddressEffectiveFromDate.Length != 8 && (participant.EmailAddressEffectiveFromDate.Length == 4 || participant.EmailAddressEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "EmailAddressEffectiveFromDate",
                  "value": "(participant.EmailAddressEffectiveFromDate.Length == 4 ? participant.EmailAddressEffectiveFromDate + \"01\" + \"01\" : participant.EmailAddressEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "01.TransformDate.PrimaryCareProviderEffectiveFromDate",
        "Expression": "participant.PrimaryCareProviderEffectiveFromDate == null ? false : (participant.PrimaryCareProviderEffectiveFromDate.Length != 8 && (participant.PrimaryCareProviderEffectiveFromDate.Length == 4 || participant.PrimaryCareProviderEffectiveFromDate.Length == 6))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "PrimaryCareProviderEffectiveFromDate",
                  "value": "(participant.PrimaryCareProviderEffectiveFromDate.Length == 4 ? participant.PrimaryCareProviderEffectiveFromDate + \"01\" + \"01\" : participant.PrimaryCareProviderEffectiveFromDate + \"01\")"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "3.Other.DateOfDeath.DoesNotExist",
        "Expression": "participant.ReasonForRemoval == \"DEA\" && string.IsNullOrEmpty(participant.DateOfDeath)",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "field": "DateOfDeath",
                  "value": "participant.ReasonForRemovalEffectiveFromDate",
                  "isExpression": true
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "03.Other.DateOfDeath.NotDea",
        "Expression": "!string.IsNullOrEmpty(participant.DateOfDeath) && participant.ReasonForRemoval != \"DEA\"",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": false,
                  "field": "DateOfDeath",
                  "value": null
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "13.Other.FamilyName.DoesNotExist",
        "Expression": "participant.RecordType == Actions.Amended && string.IsNullOrEmpty(participant.FamilyName)",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "FamilyName",
                  "value": "databaseParticipant.FamilyName"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "14.Other.FirstName.DoesNotExist",
        "Expression": "participant.RecordType == Actions.Amended && string.IsNullOrEmpty(participant.FirstName)",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "FirstName",
                  "value": "databaseParticipant.GivenName"
                }
              ]
            }
          }
        }
      },
      {
        "RuleName": "35.TooManyDemographicsFieldsChanged.Confusion.NoTransformation",
        "LocalParams": [
          {
            "Name": "NewDateOfBirth",
            "Expression": "string.IsNullOrEmpty(participant.DateOfBirth) ? null : participant.DateOfBirth.Replace(\"-\", string.Empty)"
          },
          {
            "Name": "ExistingDateOfBirth",
            "Expression": "string.IsNullOrEmpty(existingParticipant.DateOfBirth) ? null : existingParticipant.DateOfBirth.Replace(\"-\", string.Empty)"
          }
        ],
        "Expression": "participant.RecordType == Actions.Amended && existingParticipant.ParticipantId != null && ((participant.FamilyName != existingParticipant.FamilyName AND participant.Gender != existingParticipant.Gender) OR (participant.FamilyName != existingParticipant.FamilyName AND NewDateOfBirth != ExistingDateOfBirth) OR (participant.Gender != existingParticipant.Gender AND NewDateOfBirth != ExistingDateOfBirth))"
      },
      {
        "RuleName": "00.ValidateLanguageCode",
        "LocalParams": [
          {
            "Name": "languageCode",
            "Expression": "participant.PreferredLanguage"
          }
        ],
        "Expression": "!(string.IsNullOrEmpty(languageCode) || dbLookup.ValidateLanguageCode(languageCode))",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "isExpression": true,
                  "field": "PreferredLanguage",
                  "value": "null"
                },
                {
                  "isExpression": false,
                  "field": "IsInterpreterRequired",
                  "value": "0"
                }
              ]
            }
          }
        }
      }
    ]
  },
  {
    "WorkflowName": "Referred",
    "Rules": [
      {
        "RuleName": "00.UpdateServiceNowData.ReferralWithPrimaryCareProvider",
        "LocalParams": [
          {
            "Name": "IsReferralFlag",
            "Expression": "participant.ReferralFlag == true"
          },
          {
            "Name": "HasPrimaryCareProvider",
            "Expression": "!string.IsNullOrEmpty(participant.PrimaryCareProvider)"
          }
        ],
        "Expression": "IsReferralFlag && HasPrimaryCareProvider",
        "Actions": {
          "OnSuccess": {
            "Name": "TransformAction",
            "Context": {
              "transformFields": [
                {
                  "field": "PrimaryCareProviderEffectiveFromDate",
                  "value": "DateTime.UtcNow.ToString(\"yyyy-MM-dd\")",
                  "isExpression": true
                }
              ]
            }
          }
        }
      }
    ]
  }
]
