[
  {
    "WorkflowName": "Common",
    "Rules": [
      {
        "RuleName": "35.TooManyDemographicsFieldsChanged.NBO.NonFatal",
        "LocalParams": [
          {
            "Name": "NewDateOfBirth",
            "Expression": "string.IsNullOrEmpty(newParticipant.DateOfBirth) ? null : newParticipant.DateOfBirth.Replace(\"-\", string.Empty)"
          },
          {
            "Name": "ExistingDateOfBirth",
            "Expression": "string.IsNullOrEmpty(existingParticipant.DateOfBirth) ? null : existingParticipant.DateOfBirth.Replace(\"-\", string.Empty)"
          }
        ],
        "Expression": "existingParticipant.ParticipantId == null || ((newParticipant.FamilyName == existingParticipant.FamilyName AND newParticipant.Gender == existingParticipant.Gender) OR (newParticipant.FamilyName == existingParticipant.FamilyName AND NewDateOfBirth == ExistingDateOfBirth) OR (newParticipant.Gender == existingParticipant.Gender AND NewDateOfBirth == ExistingDateOfBirth))"
      },
      {
        "RuleName": "54.ValidateBsoCode.NBO.NonFatal",
        "LocalParams": [
          {
            "Name": "reasonForRemoval",
            "Expression": "newParticipant.ReasonForRemoval == \"RDI\" OR newParticipant.ReasonForRemoval == \"RDR\" OR newParticipant.ReasonForRemoval == \"RPR\""
          },
          {
            "Name": "recordType",
            "Expression": "newParticipant.RecordType == Actions.Amended"
          },
          {
            "Name": "postcode",
            "Expression": "string.IsNullOrEmpty(newParticipant.Postcode) OR !dbLookup.ValidateOutcode(newParticipant.Postcode)"
          },
          {
            "Name": "primaryCareProvider",
            "Expression": "string.IsNullOrEmpty(existingParticipant.PrimaryCareProvider) OR !existingParticipant.PrimaryCareProvider.StartsWith(\"ZZZ\") OR !dbLookup.CheckIfPrimaryCareProviderExists(existingParticipant.PrimaryCareProvider)"
          }
        ],
        "Expression": "!(recordType AND reasonForRemoval AND postcode AND primaryCareProvider)"
      }
    ]
  },
  {
    "WorkflowName": "AMENDED",
    "Rules": [
      {
        "RuleName": "51.ParticipantLocationRemainingOutsideOfCohort.ParticipantLocationRemainingOutsideOfCohort.NonFatal",
        "LocalParams": [
          {
            "Name": "ExistingParticipantInDMS",
            "Expression": "(!string.IsNullOrEmpty(existingParticipant.CurrentPosting) AND  existingParticipant.CurrentPosting == \"DMS\" AND !string.IsNullOrEmpty(existingParticipant.PrimaryCareProvider) AND dbLookup.CheckIfPrimaryCareProviderInExcludedSmuList(existingParticipant.PrimaryCareProvider))"
          },
          {
            "Name": "existingParticipantPosting",
            "Expression": "ExistingParticipantInDMS OR (dbLookup.RetrievePostingCategory(existingParticipant.CurrentPosting) == \"WALES\")"
          },
          {
            "Name": "NewParticipantInDMS",
            "Expression": "(!string.IsNullOrEmpty(existingParticipant.CurrentPosting) AND  newParticipant.CurrentPosting == \"DMS\" AND !string.IsNullOrEmpty(newParticipant.PrimaryCareProvider) AND dbLookup.CheckIfPrimaryCareProviderInExcludedSmuList(newParticipant.PrimaryCareProvider))"
          },
          {
            "Name": "newParticipantPosting",
            "Expression": "NewParticipantInDMS OR (dbLookup.RetrievePostingCategory(newParticipant.CurrentPosting) == \"WALES\")"
          }
        ],
        "Expression": "!(existingParticipantPosting AND newParticipantPosting)",
        "Actions": {
          "OnSuccess": {
            "Name": "OutputExpression",
            "Context": {
              "Expression": "\"Resident in not included area in cohort moving to same or another area not included in cohort.\""
            }
          }
        }
      }
    ]
  }
]
