[
  {
    "WorkflowName": "Common",
    "GlobalParams": [
      {
        "Name": "ValidCurrentPosting",
        "Expression": "string.IsNullOrEmpty(newParticipant.CurrentPosting) OR dbLookup.CheckIfCurrentPostingExists(newParticipant.CurrentPosting)"
      }
    ],
    "Rules": [
      {
        "RuleName": "36.ValidatePrimaryCareProvider.NonFatal",
        "Expression": "string.IsNullOrEmpty(newParticipant.PrimaryCareProvider) || dbLookup.CheckIfPrimaryCareProviderExists(newParticipant.primaryCareProvider) || dbLookup.CheckIfPrimaryCareProviderInExcludedSmuList(newParticipant.PrimaryCareProvider)",
        "Actions": {
          "OnFailure": {
            "Name": "OutputExpression",
            "Context": {
              "Expression": "\"Invalid primary care provider GP practice code\""
            }
          }
        }
      },
      {
        "RuleName": "3645.CurrentPostingAndPrimaryProvider.NonFatal",
        "LocalParams": [
          {
            "Name": "ValidPostingCategory",
            "Expression": "dbLookup.ValidatePostingCategories(newParticipant.CurrentPosting)"
          },
          {
            "Name": "InvalidPrimaryCareProvider",
            "Expression": "!string.IsNullOrEmpty(newParticipant.PrimaryCareProvider) AND !dbLookup.CheckIfPrimaryCareProviderExists(newParticipant.PrimaryCareProvider)"
          }
        ],
        "Expression": "!(ValidPostingCategory AND InvalidPrimaryCareProvider)"
      },
      {
        "RuleName": "58.CurrentPosting.NonFatal",
        "Expression": "ValidCurrentPosting",
        "Actions": {
          "OnFailure": {
            "Name": "OutputExpression",
            "Context": {
              "Expression": "\"Missing or invalid Posting\""
            }
          }
        }
      },
      {
        "RuleName": "00.ValidateLanguageCode.NonFatal",
        "LocalParams": [
          {
            "Name": "languageCode",
            "Expression": "newParticipant.PreferredLanguage"
          }
        ],
        "Expression": "string.IsNullOrEmpty(languageCode) || dbLookup.ValidateLanguageCode(languageCode)",
        "Actions": {
          "OnFailure": {
            "Name": "OutputExpression",
            "Context": {
              "Expression": "\"Invalid preferred language code\""
            }
          }
        }
      },
      {
        "RuleName": "11.ValidateReasonForRemoval.NonFatal",
        "LocalParams": [
          {
            "Name": "newRecordType",
            "Expression": "newParticipant.RecordType == Actions.New"
          },
          {
            "Name": "reasonForRemovalIsLDNOrRC",
            "Expression": "existingParticipant.ReasonForRemoval == \"LDN\" OR existingParticipant.ReasonForRemoval == \"R/C\""
          }
        ],
        "Expression": "newRecordType OR !reasonForRemovalIsLDNOrRC"
      }
    ]
  },
  {
    "WorkflowName": "ADD",
    "Rules": [
      {
        "RuleName": "47.ParticipantMustNotExist.Fatal",
        "Expression": "string.IsNullOrWhiteSpace(existingParticipant.NhsNumber)"
      }
    ]
  },
  {
    "WorkflowName": "AMENDED",
    "Rules": [
      {
        "RuleName": "22.ParticipantMustExist.Fatal",
        "Expression": "!string.IsNullOrWhiteSpace(existingParticipant.NhsNumber)"
      }
    ]
  },
  {
    "WorkflowName": "DEL",
    "Rules": [
      {
        "RuleName": "22.ParticipantMustExist.Fatal",
        "Expression": "!string.IsNullOrWhiteSpace(existingParticipant.NhsNumber)"
      }
    ]
  }
]
