// <auto-generated />
using System;
using DataServices.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataServices.Database.Migrations
{
    [DbContext(typeof(DataServicesContext))]
    partial class DataServicesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.BsSelectGpPractice", b =>
                {
                    b.Property<string>("GpPracticeCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("GP_PRACTICE_CODE");

                    b.Property<DateTime>("AuditCreatedTimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUDIT_CREATED_TIMESTAMP");

                    b.Property<decimal>("AuditId")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AUDIT_ID");

                    b.Property<DateTime>("AuditLastUpdatedTimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUDIT_LAST_MODIFIED_TIMESTAMP");

                    b.Property<string>("AuditText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AUDIT_TEXT");

                    b.Property<string>("BsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BSO");

                    b.Property<string>("CountryCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COUNTRY_CATEGORY");

                    b.HasKey("GpPracticeCode");

                    b.ToTable("BS_SELECT_GP_PRACTICE_LKP", "dbo");
                });

            modelBuilder.Entity("Model.BsSelectOutCode", b =>
                {
                    b.Property<string>("Outcode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("OUTCODE");

                    b.Property<DateTime>("AuditCreatedTimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUDIT_CREATED_TIMESTAMP");

                    b.Property<decimal>("AuditId")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AUDIT_ID");

                    b.Property<DateTime>("AuditLastModifiedTimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUDIT_LAST_MODIFIED_TIMESTAMP");

                    b.Property<string>("AuditText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AUDIT_TEXT");

                    b.Property<string>("BSO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BSO");

                    b.HasKey("Outcode");

                    b.ToTable("BS_SELECT_OUTCODE_MAPPING_LKP", "dbo");
                });

            modelBuilder.Entity("Model.BsSelectRequestAudit", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("REQUEST_ID");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATETIME");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("STATUS_CODE");

                    b.HasKey("RequestId");

                    b.ToTable("BS_SELECT_REQUEST_AUDIT", "dbo");
                });

            modelBuilder.Entity("Model.BsoOrganisation", b =>
                {
                    b.Property<int>("BsoOrganisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BSO_ORGANISATION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsoOrganisationId"));

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_1");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_3");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_4");

                    b.Property<string>("AddressLine5")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_5");

                    b.Property<string>("AdminEmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIN_EMAIL_ADDRESS");

                    b.Property<DateTime?>("AutoBatchLastRun")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_BATCH_LAST_RUN");

                    b.Property<DateTime?>("AutoBatchMaxDateTimeProcessed")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_BATCH_MAX_DATE_TIME_PROCESSED");

                    b.Property<string>("BsoOrganisationCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("BSO_ORGANISATION_CODE");

                    b.Property<string>("BsoOrganisationName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("BSO_ORGANISATION_NAME");

                    b.Property<byte>("BsoRecallInterval")
                        .HasColumnType("tinyint")
                        .HasColumnName("BSO_RECALL_INTERVAL");

                    b.Property<int?>("BsoRegionId")
                        .HasColumnType("int")
                        .HasColumnName("BSO_REGION_ID");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL_ADDRESS");

                    b.Property<string>("Extension")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("EXTENSION");

                    b.Property<byte>("FailSafeDateOfMonth")
                        .HasColumnType("tinyint")
                        .HasColumnName("FAILSAFE_DATE_OF_MONTH");

                    b.Property<DateTime>("FailSafeLastRun")
                        .HasColumnType("datetime2")
                        .HasColumnName("FAILSAFE_LAST_RUN");

                    b.Property<byte>("FailSafeMaxAgeMonths")
                        .HasColumnType("tinyint")
                        .HasColumnName("FAILSAFE_MAX_AGE_MONTHS");

                    b.Property<byte>("FailSafeMaxAgeYears")
                        .HasColumnType("tinyint")
                        .HasColumnName("FAILSAFE_MAX_AGE_YEARS");

                    b.Property<byte>("FailSafeMinAgeMonths")
                        .HasColumnType("tinyint")
                        .HasColumnName("FAILSAFE_MIN_AGE_MONTHS");

                    b.Property<byte>("FailSafeMinAgeYears")
                        .HasColumnType("tinyint")
                        .HasColumnName("FAILSAFE_MIN_AGE_YEARS");

                    b.Property<byte>("FailSafeMonths")
                        .HasColumnType("tinyint")
                        .HasColumnName("FAILSAFE_MONTHS");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("FAX_NUMBER");

                    b.Property<byte>("FoaMaxOffset")
                        .HasColumnType("tinyint")
                        .HasColumnName("FOA_MAX_OFFSET");

                    b.Property<string>("IepDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IEP_DETAILS");

                    b.Property<bool>("IgnoreEarlyRecall")
                        .HasColumnType("bit")
                        .HasColumnName("IGNORE_EARLY_RECALL");

                    b.Property<bool>("IgnoreGPReferrals")
                        .HasColumnType("bit")
                        .HasColumnName("IGNORE_GP_REFERRALS");

                    b.Property<bool>("IgnoreSelfReferrals")
                        .HasColumnType("bit")
                        .HasColumnName("IGNORE_SELF_REFERRALS");

                    b.Property<int>("InviteListSequenceNumber")
                        .HasColumnType("int")
                        .HasColumnName("INVITE_LIST_SEQUENCE_NUMBER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool>("IsAgex")
                        .HasColumnType("bit")
                        .HasColumnName("IS_AGEX");

                    b.Property<bool>("IsAgexActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_AGEX_ACTIVE");

                    b.Property<string>("LinkCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LINK_CODE");

                    b.Property<byte>("LowerAgeRange")
                        .HasColumnType("tinyint")
                        .HasColumnName("LOWER_AGE_RANGE");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTES");

                    b.Property<int>("OutgoingTransferNumber")
                        .HasColumnType("int")
                        .HasColumnName("OUTGOING_TRANSFER_NUMBER");

                    b.Property<string>("PostCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("POSTCODE");

                    b.Property<byte>("RispRecallInterval")
                        .HasColumnType("tinyint")
                        .HasColumnName("RISP_RECALL_INTERVAL");

                    b.Property<DateTime?>("RlpDateEnabled")
                        .HasColumnType("datetime2")
                        .HasColumnName("RLP_DATE_ENABLED");

                    b.Property<byte>("SafetyPeriod")
                        .HasColumnType("tinyint")
                        .HasColumnName("SAFETY_PERIOD");

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("TELEPHONE_NUMBER");

                    b.Property<DateTime>("TransactionAppDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("TRANSACTION_APP_DATE_TIME");

                    b.Property<DateTime>("TransactionDbDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("TRANSACTION_DB_DATE_TIME");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<int?>("TransactionUserOrgRoleId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_USER_ORG_ROLE_ID");

                    b.Property<byte>("UpperAgeRange")
                        .HasColumnType("tinyint")
                        .HasColumnName("UPPER_AGE_RANGE");

                    b.HasKey("BsoOrganisationId");

                    b.ToTable("BSO_ORGANISATIONS", "dbo");
                });

            modelBuilder.Entity("Model.CohortDistribution", b =>
                {
                    b.Property<int>("CohortDistributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BS_COHORT_DISTRIBUTION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CohortDistributionId"));

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADDRESS_LINE_1");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADDRESS_LINE_2");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADDRESS_LINE_3");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADDRESS_LINE_4");

                    b.Property<string>("AddressLine5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADDRESS_LINE_5");

                    b.Property<string>("CurrentPosting")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CURRENT_POSTING");

                    b.Property<DateTime?>("CurrentPostingFromDt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CURRENT_POSTING_FROM_DT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_OF_DEATH");

                    b.Property<string>("EmailAddressHome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL_ADDRESS_HOME");

                    b.Property<DateTime?>("EmailAddressHomeFromDt")
                        .HasColumnType("datetime2")
                        .HasColumnName("EMAIL_ADDRESS_HOME_FROM_DT");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FAMILY_NAME");

                    b.Property<short>("Gender")
                        .HasColumnType("smallint")
                        .HasColumnName("GENDER");

                    b.Property<string>("GivenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("GIVEN_NAME");

                    b.Property<short>("InterpreterRequired")
                        .HasColumnType("smallint")
                        .HasColumnName("INTERPRETER_REQUIRED");

                    b.Property<short>("IsExtracted")
                        .HasColumnType("smallint")
                        .HasColumnName("IS_EXTRACTED");

                    b.Property<long>("NHSNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("NHS_NUMBER");

                    b.Property<string>("NamePrefix")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("NAME_PREFIX");

                    b.Property<string>("OtherGivenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("OTHER_GIVEN_NAME");

                    b.Property<long>("ParticipantId")
                        .HasColumnType("bigint")
                        .HasColumnName("PARTICIPANT_ID");

                    b.Property<string>("PostCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("POST_CODE");

                    b.Property<string>("PreferredLanguage")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("PREFERRED_LANGUAGE");

                    b.Property<string>("PreviousFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PREVIOUS_FAMILY_NAME");

                    b.Property<string>("PrimaryCareProvider")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PRIMARY_CARE_PROVIDER");

                    b.Property<DateTime?>("PrimaryCareProviderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PRIMARY_CARE_PROVIDER_FROM_DT");

                    b.Property<string>("ReasonForRemoval")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("REASON_FOR_REMOVAL");

                    b.Property<DateTime?>("ReasonForRemovalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("REASON_FOR_REMOVAL_FROM_DT");

                    b.Property<DateTime?>("RecordInsertDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECORD_INSERT_DATETIME");

                    b.Property<DateTime?>("RecordUpdateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECORD_UPDATE_DATETIME");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("REQUEST_ID");

                    b.Property<long>("SupersededNHSNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("SUPERSEDED_NHS_NUMBER");

                    b.Property<string>("TelephoneNumberHome")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("TELEPHONE_NUMBER_HOME");

                    b.Property<DateTime?>("TelephoneNumberHomeFromDt")
                        .HasColumnType("datetime2")
                        .HasColumnName("TELEPHONE_NUMBER_HOME_FROM_DT");

                    b.Property<string>("TelephoneNumberMob")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("TELEPHONE_NUMBER_MOB");

                    b.Property<DateTime?>("TelephoneNumberMobFromDt")
                        .HasColumnType("datetime2")
                        .HasColumnName("TELEPHONE_NUMBER_MOB_FROM_DT");

                    b.Property<DateTime?>("UsualAddressFromDt")
                        .HasColumnType("datetime2")
                        .HasColumnName("USUAL_ADDRESS_FROM_DT");

                    b.HasKey("CohortDistributionId");

                    b.HasIndex(new[] { "NHSNumber" }, "IX_BS_COHORT_DISTRIBUTION_NHSNUMBER");

                    b.ToTable("BS_COHORT_DISTRIBUTION", "dbo");
                });

            modelBuilder.Entity("Model.CurrentPosting", b =>
                {
                    b.Property<string>("Posting")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("POSTING");

                    b.Property<string>("InUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IN_USE");

                    b.Property<string>("IncludedInCohort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("INCLUDED_IN_COHORT");

                    b.Property<string>("PostingCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POSTING_CATEGORY");

                    b.HasKey("Posting");

                    b.ToTable("CURRENT_POSTING_LKP", "dbo");
                });

            modelBuilder.Entity("Model.ExceptionManagement", b =>
                {
                    b.Property<int>("ExceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EXCEPTION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExceptionId"));

                    b.Property<int?>("Category")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORY");

                    b.Property<string>("CohortName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("COHORT_NAME");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE_CREATED");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE_RESOLVED");

                    b.Property<string>("ErrorRecord")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ERROR_RECORD");

                    b.Property<DateTime?>("ExceptionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("EXCEPTION_DATE");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FILE_NAME");

                    b.Property<short?>("IsFatal")
                        .HasColumnType("smallint")
                        .HasColumnName("IS_FATAL");

                    b.Property<string>("NhsNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NHS_NUMBER");

                    b.Property<string>("RuleDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RULE_DESCRIPTION");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int")
                        .HasColumnName("RULE_ID");

                    b.Property<string>("ScreeningName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SCREENING_NAME");

                    b.HasKey("ExceptionId");

                    b.HasIndex(new[] { "NhsNumber", "ScreeningName" }, "IX_EXCEPTIONMGMT_NHSNUM_SCREENINGNAME");

                    b.ToTable("EXCEPTION_MANAGEMENT", "dbo");
                });

            modelBuilder.Entity("Model.ExcludedSMULookup", b =>
                {
                    b.Property<string>("GpPracticeCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("GP_PRACTICE_CODE");

                    b.HasKey("GpPracticeCode");

                    b.ToTable("EXCLUDED_SMU_LKP", "dbo");
                });

            modelBuilder.Entity("Model.GPPractice", b =>
                {
                    b.Property<int>("GPPracticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GP_PRACTICE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GPPracticeId"));

                    b.Property<bool>("Actioned")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIONED");

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_1");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_2");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_3");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_4");

                    b.Property<string>("AddressLine5")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("ADDRESS_LINE_5");

                    b.Property<int>("BSOOrganisationId")
                        .HasColumnType("int")
                        .HasColumnName("BSO_ORGANISATION_ID");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CLOSE_DATE");

                    b.Property<DateTime?>("FailsafeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FAILSAFE_DATE");

                    b.Property<string>("GPPracticeCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("GP_PRACTICE_CODE");

                    b.Property<int?>("GPPracticeGroupId")
                        .HasColumnType("int")
                        .HasColumnName("GP_PRACTICE_GROUP_ID");

                    b.Property<string>("GPPracticeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("GP_PRACTICE_NAME");

                    b.Property<int?>("LastActionedByUserOrgRoleId")
                        .HasColumnType("int")
                        .HasColumnName("LAST_ACTIONED_BY_USER_ORG_ROLE_ID");

                    b.Property<DateTimeOffset?>("LastActionedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LAST_ACTIONED_ON");

                    b.Property<DateTimeOffset>("LastUpdatedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LAST_UPDATED_DATE_TIME");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OPEN_DATE");

                    b.Property<string>("Outcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("OUTCODE");

                    b.Property<string>("Postcode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("POSTCODE");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("STATUS_CODE");

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("TELEPHONE_NUMBER");

                    b.Property<DateTimeOffset>("TransactionAppDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("TRANSACTION_APP_DATE_TIME");

                    b.Property<DateTimeOffset>("TransactionDbDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("TRANSACTION_DB_DATE_TIME");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<int>("TransactionUserOrgRoleId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_USER_ORG_ROLE_ID");

                    b.HasKey("GPPracticeId");

                    b.ToTable("GP_PRACTICES", "dbo");
                });

            modelBuilder.Entity("Model.GenderMaster", b =>
                {
                    b.Property<string>("GenderCd")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("GENDER_CD");

                    b.Property<string>("GenderDesc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GENDER_DESC");

                    b.HasKey("GenderCd");

                    b.ToTable("GENDER_MASTER", "dbo");
                });

            modelBuilder.Entity("Model.GeneCodeLkp", b =>
                {
                    b.Property<int>("GeneCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GENE_CODE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneCodeId"));

                    b.Property<string>("GeneCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GENE_CODE");

                    b.Property<string>("GeneCodeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GENE_CODE_DESCRIPTION");

                    b.HasKey("GeneCodeId");

                    b.ToTable("GENE_CODE_LKP", "dbo");
                });

            modelBuilder.Entity("Model.HigherRiskReferralReasonLkp", b =>
                {
                    b.Property<int>("HigherRiskReferralReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HIGHER_RISK_REFERRAL_REASON_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HigherRiskReferralReasonId"));

                    b.Property<string>("HigherRiskReferralReasonCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HIGHER_RISK_REFERRAL_REASON_CODE");

                    b.Property<string>("HigherRiskReferralReasonCodeDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HIGHER_RISK_REFERRAL_REASON_CODE_DESCRIPTION");

                    b.HasKey("HigherRiskReferralReasonId");

                    b.ToTable("HIGHER_RISK_REFERRAL_REASON_LKP", "dbo");
                });

            modelBuilder.Entity("Model.LanguageCode", b =>
                {
                    b.Property<string>("LanguageCodeId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LANGUAGE_CODE");

                    b.Property<string>("LanguageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LANGUAGE_DESCRIPTION");

                    b.HasKey("LanguageCodeId");

                    b.ToTable("LANGUAGE_CODES", "dbo");
                });

            modelBuilder.Entity("Model.ParticipantDemographic", b =>
                {
                    b.Property<long>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PARTICIPANT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ParticipantId"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS_LINE_1");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS_LINE_2");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS_LINE_3");

                    b.Property<string>("AddressLine4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS_LINE_4");

                    b.Property<string>("AddressLine5")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS_LINE_5");

                    b.Property<string>("CurrentPosting")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CURRENT_POSTING");

                    b.Property<string>("CurrentPostingFromDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CURRENT_POSTING_FROM_DT");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("DateOfDeath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATE_OF_DEATH");

                    b.Property<short?>("DeathStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("DEATH_STATUS");

                    b.Property<string>("EmailAddressHome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL_ADDRESS_HOME");

                    b.Property<string>("EmailAddressHomeFromDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL_ADDRESS_HOME_FROM_DT");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FAMILY_NAME");

                    b.Property<short?>("Gender")
                        .HasColumnType("smallint")
                        .HasColumnName("GENDER");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GIVEN_NAME");

                    b.Property<short?>("InterpreterRequired")
                        .HasColumnType("smallint")
                        .HasColumnName("INTERPRETER_REQUIRED");

                    b.Property<short?>("InvalidFlag")
                        .HasColumnType("smallint")
                        .HasColumnName("INVALID_FLAG");

                    b.Property<string>("NamePrefix")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME_PREFIX");

                    b.Property<long>("NhsNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("NHS_NUMBER");

                    b.Property<string>("OtherGivenName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OTHER_GIVEN_NAME");

                    b.Property<string>("PafKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PAF_KEY");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POST_CODE");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PREFERRED_LANGUAGE");

                    b.Property<string>("PreviousFamilyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PREVIOUS_FAMILY_NAME");

                    b.Property<string>("PrimaryCareProvider")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRIMARY_CARE_PROVIDER");

                    b.Property<string>("PrimaryCareProviderFromDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRIMARY_CARE_PROVIDER_FROM_DT");

                    b.Property<DateTime?>("RecordInsertDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECORD_INSERT_DATETIME");

                    b.Property<DateTime?>("RecordUpdateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECORD_UPDATE_DATETIME");

                    b.Property<long?>("SupersededByNhsNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("SUPERSEDED_BY_NHS_NUMBER");

                    b.Property<string>("TelephoneNumberHome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEPHONE_NUMBER_HOME");

                    b.Property<string>("TelephoneNumberHomeFromDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEPHONE_NUMBER_HOME_FROM_DT");

                    b.Property<string>("TelephoneNumberMob")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEPHONE_NUMBER_MOB");

                    b.Property<string>("TelephoneNumberMobFromDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEPHONE_NUMBER_MOB_FROM_DT");

                    b.Property<string>("UsualAddressFromDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUAL_ADDRESS_FROM_DT");

                    b.HasKey("ParticipantId");

                    b.HasIndex(new[] { "NhsNumber" }, "Index_PARTICIPANT_DEMOGRAPHIC_NhsNumber");

                    b.ToTable("PARTICIPANT_DEMOGRAPHIC", "dbo");
                });

            modelBuilder.Entity("Model.ParticipantManagement", b =>
                {
                    b.Property<long>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PARTICIPANT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ParticipantId"));

                    b.Property<string>("BusinessRuleVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BUSINESS_RULE_VERSION");

                    b.Property<DateTime?>("DateIrradiated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_IRRADIATED");

                    b.Property<short>("EligibilityFlag")
                        .HasColumnType("smallint")
                        .HasColumnName("ELIGIBILITY_FLAG");

                    b.Property<short>("ExceptionFlag")
                        .HasColumnType("smallint")
                        .HasColumnName("EXCEPTION_FLAG");

                    b.Property<int?>("GeneCodeId")
                        .HasColumnType("int")
                        .HasColumnName("GENE_CODE_ID");

                    b.Property<DateTime?>("HigherRiskNextTestDueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("HIGHER_RISK_NEXT_TEST_DUE_DATE");

                    b.Property<int?>("HigherRiskReferralReasonId")
                        .HasColumnType("int")
                        .HasColumnName("HIGHER_RISK_REFERRAL_REASON_ID");

                    b.Property<short?>("IsHigherRisk")
                        .HasColumnType("smallint")
                        .HasColumnName("IS_HIGHER_RISK");

                    b.Property<short?>("IsHigherRiskActive")
                        .HasColumnType("smallint")
                        .HasColumnName("IS_HIGHER_RISK_ACTIVE");

                    b.Property<long>("NHSNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("NHS_NUMBER");

                    b.Property<DateTime?>("NextTestDueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("NEXT_TEST_DUE_DATE");

                    b.Property<string>("NextTestDueDateCalcMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NEXT_TEST_DUE_DATE_CALC_METHOD");

                    b.Property<string>("ParticipantScreeningStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PARTICIPANT_SCREENING_STATUS");

                    b.Property<string>("ReasonForRemoval")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("REASON_FOR_REMOVAL");

                    b.Property<DateTime?>("ReasonForRemovalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("REASON_FOR_REMOVAL_FROM_DT");

                    b.Property<DateTime?>("RecordInsertDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECORD_INSERT_DATETIME");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("RECORD_TYPE");

                    b.Property<DateTime?>("RecordUpdateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECORD_UPDATE_DATETIME");

                    b.Property<string>("ScreeningCeasedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SCREENING_CEASED_REASON");

                    b.Property<long>("ScreeningId")
                        .HasColumnType("bigint")
                        .HasColumnName("SCREENING_ID");

                    b.Property<DateTime?>("SrcSysProcessedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SRC_SYSTEM_PROCESSED_DATETIME");

                    b.HasKey("ParticipantId");

                    b.HasIndex(new[] { "NHSNumber", "ScreeningId" }, "ix_PARTICIPANT_MANAGEMENT_screening_nhs");

                    b.ToTable("PARTICIPANT_MANAGEMENT", "dbo");
                });

            modelBuilder.Entity("Model.ScreeningLkp", b =>
                {
                    b.Property<string>("ScreeningWorkflowId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SCREENING_WORKFLOW_ID");

                    b.Property<string>("ScreeningAcronym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SCREENING_ACRONYM");

                    b.Property<long>("ScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SCREENING_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ScreeningId"));

                    b.Property<string>("ScreeningName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SCREENING_NAME");

                    b.Property<string>("ScreeningType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SCREENING_TYPE");

                    b.HasKey("ScreeningWorkflowId");

                    b.ToTable("SCREENING_LKP", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
