name: cohort-manager

services:
  # External Dependencies
  azurite:
    container_name: azurite
    network_mode: host
    image: mcr.microsoft.com/azure-storage/azurite
    command: azurite --silent

  sql-edge:
    container_name: db
    network_mode: host
    image: mcr.microsoft.com/azure-sql-edge
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${PASSWORD}
    cap_add:
      - SYS_PTRACE
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -v --silent 127.0.0.1:1433 --stderr - | grep -q 'Empty reply from server'"
        ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s

  db-setup:
    container_name: db-setup
    network_mode: host
    build: ./Set-up/database
    depends_on:
      sql-edge:
        condition: service_healthy
    environment:
      - PASSWORD=${PASSWORD}
      - DB_NAME=${DB_NAME}

  # CaaS Integration Service
  receive-caas-file:
    container_name: receive-caas-file
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: CaasIntegration/receiveCaasFile/Dockerfile
    environment:
      - AzureWebJobsStorage=UseDevelopmentStorage=true
      - caasfolder_STORAGE=UseDevelopmentStorage=true
      - ASPNETCORE_URLS=http://*:7060
      - targetFunction=http://localhost:7061/api/processCaasFile
    depends_on:
      - azurite

  process-caas-file:
    container_name: process-caas-file
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: CaasIntegration/processCaasFile/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7061
      - PMSAddParticipant=http://localhost:7062/api/addParticipant
      - PMSRemoveParticipant=http://localhost:7063/api/RemoveParticipant
      - PMSUpdateParticipant=http://localhost:7065/api/updateParticipant

  # Participant Management Service
  add-participant:
    container_name: add-participant
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: ParticipantManagementServices/addParticipant/Dockerfile
    environment:
      - AzureWebJobsStorage=UseDevelopmentStorage=true
      - ASPNETCORE_URLS=http://*:7062
      - DSaddParticipant=http://localhost:7066/api/CreateParticipant
      - DSmarkParticipantAsEligible=http://localhost:7067/api/markParticipantAsEligible
      - FUNCTIONS_WORKER_RUNTIME=dotnet-isolated
      - AZURE_FUNCTIONS_ENVIRONMENT=Development

  remove-participant:
    container_name: remove-participant
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: ParticipantManagementServices/RemoveParticipant/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7063
      - markParticipantAsIneligible=http://localhost:7068/api/markParticipantAsIneligible

  update-eligibility:
    container_name: update-eligibility
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: ParticipantManagementServices/UpdateEligibility/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7064
      - DSmarkParticipantAsIneligible=http://localhost:7068/api/markParticipantAsIneligible

  update-participant:
    container_name: update-participant
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: ParticipantManagementServices/updateParticipant/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7065
      - UpdateParticipant=http://localhost:7069/api/updateParticipantDetails
      - StaticValidationURL=http://localhost:7071/api/StaticValidation

  # Screening Data Service
  create-participant:
    container_name: create-participant
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: screeningDataServices/createParticipant/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7066
      - SqlConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True
      - FUNCTIONS_WORKER_RUNTIME=dotnet-isolated

  mark-participant-eligible:
    container_name: mark-participant-eligible
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: screeningDataServices/markParticipantAsEligible/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7067
      - SqlConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True
      - DtOsDatabaseConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True

  mark-participant-ineligible:
    container_name: mark-participant-ineligible
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: screeningDataServices/markParticipantAsIneligible/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7068
      - SqlConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True
      - DtOsDatabaseConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True

  update-participant-details:
    container_name: update-participant-details
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: screeningDataServices/updateParticipantDetails/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7069
      - SqlConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True
      - DtOsDatabaseConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True
      - LookupValidationURL=http://localhost:7072/api/LookupValidation

  exception-data-service:
    container_name: exception-data-service
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: screeningDataServices/ExceptionDataService/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7070
      - DtOsDatabaseConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True

  # Screening Validation Service
  static-validation:
    container_name: static-validation
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: ScreeningValidationService/StaticValidation/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7071
      - DtOsDatabaseConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True

  lookup-validation:
    container_name: lookup-validation
    network_mode: host
    build:
      context: ./src/Functions/
      dockerfile: ScreeningValidationService/LookupValidation/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:7072
      - DtOsDatabaseConnectionString=Server=localhost,1433;Database=${DB_NAME};User Id=SA;Password=${PASSWORD};TrustServerCertificate=True

networks:
  cohort-manager-network:
    driver: bridge
