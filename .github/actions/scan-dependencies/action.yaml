name: "Scan dependencies"
description: "Scan dependencies"
inputs:
  build_datetime:
    description: "Build datetime, set by the CI/CD pipeline workflow"
    required: true
  build_timestamp:
    description: "Build timestamp, set by the CI/CD pipeline workflow"
    required: true
runs:
  using: "composite"
  steps:
    - name: "Generate SBOM"
      shell: bash
      run: |
        export BUILD_DATETIME=${{ inputs.build_datetime }}
        ./scripts/reports/create-sbom-report.sh
    - name: "Compress SBOM report"
      shell: bash
      run: zip sbom-repository-report.json.zip sbom-repository-report.json
    - name: "Upload SBOM report as an artefact"
      if: ${{ !env.ACT }}
      uses: actions/upload-artifact@v4
      with:
        name: sbom-repository-report.json.zip
        path: ./sbom-repository-report.json.zip
        retention-days: 21
    - name: "Scan vulnerabilities"
      shell: bash
      run: |
        export BUILD_DATETIME=${{ inputs.build_datetime }}
        ./scripts/reports/scan-vulnerabilities.sh
    - name: "Display vulnerabilities summary"
      shell: bash
      run: |
        echo "Vulnerabilities Summary:"
        if [ -f vulnerabilities-repository-report.json ]; then
          echo "Vulnerabilities report:- "
          cat vulnerabilities-repository-report.json
        else
          echo "No vulnerabilities report found."
        fi
    - name: "Compress vulnerabilities report"
      shell: bash
      run: zip vulnerabilities-repository-report.json.zip vulnerabilities-repository-report.json
    - name: "Upload vulnerabilities report as an artefact"
      if: ${{ !env.ACT }}
      uses: actions/upload-artifact@v4
      with:
        name: vulnerabilities-repository-report.json.zip
        path: ./vulnerabilities-repository-report.json.zip
        retention-days: 21
