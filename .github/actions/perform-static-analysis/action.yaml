name: "Perform static analysis"
description: "Perform static analysis with SonarCloud for .NET projects"
inputs:
  sonar_organisation_key:
    description: "Sonar organisation key, used to identify the project"
    required: true
  sonar_project_key:
    description: "Sonar project key, used to identify the project"
    required: true
  sonar_token:
    description: "Sonar token, the API key"
    required: true
  coverage_path:
    description: "Path to coverage reports"
    required: false
    default: "coverage"
  unit_test_dir:
    description: "Directory containing the unit tests"
    required: false
    default: "tests/UnitTests"
runs:
  using: "composite"
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: "zulu"
    - name: Install .NET SDKs
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          7.0.x
          8.0.x
          9.0.x
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-sonar-
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Set up Node.js with npm cache
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          application/CohortManager/src/Web/package-lock.json
    - name: Install SonarScanner
      shell: bash
      run: dotnet tool install --global dotnet-sonarscanner
    - name: SonarCloud analysis
      shell: bash
      env:
        # Tokens and inputs
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_HEAD: ${{ github.head_ref }}
        SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
        SONAR_ORGANISATION_KEY: ${{ inputs.sonar_organisation_key }}
        SONAR_TOKEN: ${{ inputs.sonar_token }}
        SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
        SONAR_ORGANISATION_KEY: ${{ inputs.sonar_organisation_key }}
        COVERAGE_PATH: ${{ inputs.coverage_path }}
        UNIT_TEST_DIR: ${{ inputs.unit_test_dir }}
        # GitHub context
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_HEAD_REF: ${{ github.head_ref }}
        GITHUB_BASE_REF: ${{ github.base_ref }}
        GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF_VALUE: ${{ github.ref }}
        GITHUB_SHA_VALUE: ${{ github.sha }}
      run: |
        set -euo pipefail
        # Make the script executable
        chmod +x "$GITHUB_WORKSPACE/scripts/reports/sonar-analysis.sh"

        # Run the script with all necessary parameters (quoted)
        "$GITHUB_WORKSPACE/scripts/reports/sonar-analysis.sh" \
          "$SONAR_PROJECT_KEY" \
          "$SONAR_ORGANISATION_KEY" \
          "$SONAR_TOKEN" \
          "$COVERAGE_PATH" \
          "$GITHUB_TOKEN" \
          "$GITHUB_EVENT_NAME" \
          "$GITHUB_HEAD_REF" \
          "$GITHUB_BASE_REF" \
          "$GITHUB_PR_NUMBER" \
          "$GITHUB_REPOSITORY" \
          "$GITHUB_REF_VALUE" \
          "$GITHUB_SHA_VALUE" \
          "$UNIT_TEST_DIR"
