# name: "Manual Cohort Manager Test Stage"

# on:
#   workflow_dispatch:
#     inputs:
#       environment_tag:
#         description: Select the environment for the deployment
#         required: true
#         type: choice
#         default: development
#         options:
#           - development

# jobs:

#   metadata:
#     name: "Set CI/CD metadata"
#     runs-on: ubuntu-latest
#     timeout-minutes: 1
#     permissions:
#       pull-requests: read
#     outputs:
#       build_datetime_london: ${{ steps.variables.outputs.build_datetime_london }}
#       build_datetime: ${{ steps.variables.outputs.build_datetime }}
#       build_timestamp: ${{ steps.variables.outputs.build_timestamp }}
#       build_epoch: ${{ steps.variables.outputs.build_epoch }}
#       nodejs_version: ${{ steps.variables.outputs.nodejs_version }}
#       python_version: ${{ steps.variables.outputs.python_version }}
#       terraform_version: ${{ steps.variables.outputs.terraform_version }}
#       environment_tag: ${{ steps.variables.outputs.environment_tag }}
#       version: ${{ steps.variables.outputs.version }}
#       does_pull_request_exist: ${{ steps.pr_exists.outputs.does_pull_request_exist }}
#     steps:
#       - name: "Checkout code"
#         uses: actions/checkout@v4
#         with:
#           submodules: 'true'
#       - name: "Set CI/CD variables"
#         id: variables
#         run: |
#           datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
#           BUILD_DATETIME=$datetime make version-create-effective-file
#           echo "build_datetime_london=$(TZ=Europe/London date --date=$datetime +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_OUTPUT
#           echo "build_datetime=$datetime" >> $GITHUB_OUTPUT
#           echo "build_timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
#           echo "build_epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
#           echo "nodejs_version=$(grep "^nodejs" .tool-versions | cut -f2 -d' ')" >> $GITHUB_OUTPUT
#           echo "python_version=$(grep "^nodejs" .tool-versions | cut -f2 -d' ')" >> $GITHUB_OUTPUT
#           echo "terraform_version=$(grep "^terraform" .tool-versions | cut -f2 -d' ')" >> $GITHUB_OUTPUT
#           echo "version=$(head -n 1 .version 2> /dev/null || echo unknown)" >> $GITHUB_OUTPUT
#           echo "environment_tag=development" >> $GITHUB_OUTPUT
#       - name: "List variables"
#         run: |
#           export BUILD_DATETIME_LONDON="${{ steps.variables.outputs.build_datetime_london }}"
#           export BUILD_DATETIME="${{ steps.variables.outputs.build_datetime }}"
#           export BUILD_TIMESTAMP="${{ steps.variables.outputs.build_timestamp }}"
#           export BUILD_EPOCH="${{ steps.variables.outputs.build_epoch }}"
#           export NODEJS_VERSION="${{ steps.variables.outputs.nodejs_version }}"
#           export PYTHON_VERSION="${{ steps.variables.outputs.python_version }}"
#           export TERRAFORM_VERSION="${{ steps.variables.outputs.terraform_version }}"
#           export ENVIRONMENT_TAG="${{ steps.variables.outputs.environment_tag }}"
#           export VERSION="${{ steps.variables.outputs.version }}"
#           make list-variables
  
#   manual-test:
#     name: Manual Testing the application
#     uses: ./.github/workflows/stage-2-test.yaml
#     with:
#       unit_test_dir: tests/UnitTests
#       app_dir: application/CohortManager
#       build_datetime: "${{ needs.metadata.outputs.build_datetime }}"
#       build_timestamp: "${{ needs.metadata.outputs.build_timestamp }}"
#       build_epoch: "${{ needs.metadata.outputs.build_epoch }}"
#       nodejs_version: "${{ needs.metadata.outputs.nodejs_version }}"
#       python_version: "${{ needs.metadata.outputs.python_version }}"
#       terraform_version: "${{ needs.metadata.outputs.terraform_version }}"
#       version: "${{ needs.metadata.outputs.version }}"
#     secrets: inherit
