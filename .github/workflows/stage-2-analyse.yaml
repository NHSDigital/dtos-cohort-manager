name: Static Analysis

on:
  workflow_run:
    workflows: ["Test stage"]  # Name of your test workflow
    types:
      - completed

jobs:
  perform-static-analysis:
    name: Perform static analysis
    # Only run if the test workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read  # To access artifacts from previous workflows
    timeout-minutes: 15  # Increased timeout
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0  # Full history for SonarCloud
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"
          cache: 'maven'  # Cache Maven dependencies
          
      # Only install the .NET SDK versions you actually need
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # Use only the version you need
          
      # Download the artifacts from the previous workflow run
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: "Test stage"
          workflow_conclusion: success
          name: test-coverage-report
          path: coverage
            
      # Improve caching for SonarCloud scanner
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-sonar-
            
      - name: Install SonarQube Cloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
            
      # Optimize NuGet cache with better keys
      - name: Setup NuGet cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Restore NuGet packages
        run: |
          find . -name "*.sln" -exec dotnet restore {} \;
          
      # Split the analysis into multiple steps for better visibility
      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /k:"${{ vars.SONAR_PROJECT_KEY }}" \
            /o:"${{ vars.SONAR_ORGANISATION_KEY }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.vscoveragexml.reportsPaths="coverage/vscoverage.xml" \
            /d:sonar.cs.opencover.reportsPaths="coverage/cobertura.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            
      - name: Build solution
        run: |
          find . -name "*.sln" -exec dotnet build {} --no-restore \;
            
      - name: Complete SonarCloud analysis
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}