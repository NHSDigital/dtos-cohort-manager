name: Deployment stage

on:
  workflow_call:
    inputs:
      environments:
        description: List of environments to deploy to (String array)
        required: true
        type: string
      commit_sha:
        description: Commit SHA used to fetch ADO pipeline and docker image
        required: true
        type: string
      pr_number:
        description: Pull request number when used in a pull request
        required: false
        type: string
  
  workflow_dispatch:
    inputs:
      environments:
        description: List of environments to deploy to (String array)
        required: true
        type: string
      commit_sha:
        description: Commit SHA used to fetch ADO pipeline and docker image
        required: true
        type: string
      pr_number:
        description: Pull request number when used in a pull request
        required: false
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        environment: ${{ fromJson(inputs.environments) }}
      max-parallel: 1
    environment: ${{ matrix.environment }}
    concurrency: deploy-${{ matrix.environment }}-${{ github.ref }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Make script executable
        run: chmod +x scripts/bash/wait_ado_pipeline.sh

      - name: Call deployment pipeline
        shell: bash
        env:
          COMMIT_SHA: ${{ inputs.commit_sha }}
          ENVIRONMENT_NAME: ${{ matrix.environment }}
        run: |
          set -euo pipefail
          # Define common variables
          organisation='https://dev.azure.com/nhse-dtos'
          project_name='dtos-cohort-manager'

          # Define which tests to run based on the environment
          declare -A test_types=(
            ["development"]="smoke_e2e"
            ["nft"]=""
            ["integration"]=""
            ["sandbox"]="smoke_e2e,regression_api"
            ["preprod"]=""
            ["production"]=""
          )

          # Derive the short SHA from the provided commit
          git_short_sha=$(git rev-parse --short "$COMMIT_SHA")

          echo "Starting Azure devops pipeline \"Deploy to Azure - Core ${ENVIRONMENT_NAME}\"..."
          RUN_ID=$(az pipelines run \
            --commit-id "$COMMIT_SHA" \
            --name "Deploy to Azure - Core ${ENVIRONMENT_NAME}" \
            --org "${organisation}" \
            --project "${project_name}" \
            --parameters "dockerImageTag=${git_short_sha}" \
            --parameters "testTypes=[${test_types[$ENVIRONMENT_NAME]}]" \
            --output tsv --query id)

          echo "Click here to view the ADO pipeline: ${organisation}/${project_name}/_build/results?buildId=${RUN_ID}"

          scripts/bash/wait_ado_pipeline.sh "$RUN_ID" "${organisation}" "${project_name}" 1800
