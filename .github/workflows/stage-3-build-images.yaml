name: Docker Image CI

on:
  push:
    branches:
      - main

  workflow_call:
    inputs:
      environment_tag:
        description: "Environment of the deployement"
        required: true
        type: string

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'

      - uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          path: application/CohortManager/src/Functions
          dir_names: "true"

      - name: get docker compose function name(s)
        id: get-function-names
        env:
          CHANGED_FOLDERS: ${{steps.changed-files.outputs.all_changed_files}}
        run: |
          bash ./scripts/deployment/get-docker-names.sh

      - name: print function names
        run: echo "${{steps.get-function-names.outputs.FUNC_NAMES}}"

      - name: Az CLI login
        uses: azure/login@v1
        if: github.ref == 'refs/heads/main'
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Container Registry login
        if: github.ref == 'refs/heads/main'
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Create Tags
        run: |
          echo "creating tags"
          echo "COMMIT_HASH_TAG=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
          if [ -z ${{ github.event.number }} ]; then
            echo "PR_NUM_TAG=latest" >> $GITHUB_ENV
          else
            echo "PR_NUM_TAG=${{ github.event.number }}" >> $GITHUB_ENV
          fi

          # echo "ENVIRONMENT_TAG=${{ inputs.environment_tag }}" >> $GITHUB_ENV
          echo "ENVIRONMENT_TAG=development" >> $GITHUB_ENV

      - name: build docker images
        working-directory: ./application/CohortManager
        run: |
          if [ "${{steps.get-function-names.outputs.FUNC_NAMES}}" == "null" ]; then
            echo "No functions changed"
          else
            echo "These functions will be rebuilt: " ${{steps.get-function-names.outputs.FUNC_NAMES}}
            echo "COMMIT_HASH_TAG:$COMMIT_HASH_TAG"
            echo "PR_NUM_TAG:$PR_NUM_TAG"
            echo "ENVIRONMENT_TAG:$ENVIRONMENT_TAG"

            # Build the docker images via the compose file.
            docker compose build ${{steps.get-function-names.outputs.FUNC_NAMES}}
          fi

      - name: push docker images
        if: github.ref == 'refs/heads/main'
        working-directory: ./application/CohortManager
        run: |
          set -x

          if [ "${{steps.get-function-names.outputs.FUNC_NAMES}}" == "null" ]; then
            echo "No functions changed"
          else

            for function in ${{steps.get-function-names.outputs.FUNC_NAMES}}; do
              repo_name="${{ secrets.ACR_NAME }}.azurecr.io/cohort-manager-$function"

              docker tag cohort-manager-$function:$PR_NUM_TAG "$repo_name:$COMMIT_HASH_TAG"
              docker tag cohort-manager-$function:$PR_NUM_TAG "$repo_name:$PR_NUM_TAG"
              docker tag cohort-manager-$function:$PR_NUM_TAG "$repo_name:$ENVIRONMENT_TAG"

              # Push the images to the repository
              docker push "$repo_name:$COMMIT_HASH_TAG"
              docker push "$repo_name:$PR_NUM_TAG"
              docker push "$repo_name:$ENVIRONMENT_TAG"
            done
          fi
